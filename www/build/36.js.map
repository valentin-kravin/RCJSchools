{"version":3,"sources":["../../src/core/login/pages/credentials/credentials.module.ts","../../src/core/login/pages/credentials/credentials.ts"],"names":[],"mappings":"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","file":"36.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { CoreLoginCredentialsPage } from './credentials';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\n\n@NgModule({\n    declarations: [\n        CoreLoginCredentialsPage\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(CoreLoginCredentialsPage),\n        TranslateModule.forChild()\n    ]\n})\nexport class CoreLoginCredentialsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/credentials/credentials.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavController, ModalController, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreAppProvider } from '@providers/app';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreLoginHelperProvider } from '../../providers/helper';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CoreConfigConstants } from '../../../../configconstants';\n\n/**\n * Site url interface.\n */\nexport interface SiteURLItem {\n    /**\n     * id to identify the specific url.\n     * @type {number}\n     */\n    id: number;\n\n    /**\n     * arabic name of the siste.\n     * @type {string}\n     */\n    arabic_name: string;\n\n    /**\n     * arabic name of the siste.\n     * @type {string}\n     */\n    english_name: string;\n\n    /**\n     * url of the site\n     * @type {string}\n     */\n    url: string;\n}\n\n/**\n * Page to enter the user credentials.\n */\n@IonicPage({ segment: 'core-login-credentials' })\n@Component({\n    selector: 'page-core-login-credentials',\n    templateUrl: 'credentials.html',\n})\nexport class CoreLoginCredentialsPage {\n    credForm: FormGroup;\n    siteUrl: string;\n    siteChecked = false;\n    siteName: string;\n    logoUrl: string;\n    authInstructions: string;\n    canSignup: boolean;\n    identityProviders: any[];\n    pageLoaded = false;\n    isBrowserSSO = false;\n    isFixedUrlSet = false;\n    urlList:Array<SiteURLItem> = [];\n    selectedSite :number = -1;\n\n    // From Core Login Page\n    fixedSites: any[];\n    filteredSites: any[];\n    fixedDisplay = 'buttons';\n    showKeyboard = false;\n    filter = '';\n\n    protected siteConfig;\n    protected eventThrown = false;\n    protected viewLeft = false;\n    protected siteId: string;\n    protected urlToOpen: string;\n\n    constructor(private navCtrl: NavController, navParams: NavParams, fb: FormBuilder, private appProvider: CoreAppProvider,\n            private sitesProvider: CoreSitesProvider, private loginHelper: CoreLoginHelperProvider,\n            private domUtils: CoreDomUtilsProvider, private translate: TranslateService,\n            private eventsProvider: CoreEventsProvider,\n            private modalCtrl: ModalController,) {\n\n        // this.siteUrl = navParams.get('siteUrl');\n        // this.siteConfig = navParams.get('siteConfig');\n        this.urlToOpen = navParams.get('urlToOpen');\n\n        this.credForm = fb.group({\n            username: [navParams.get('username') || '', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // From CoreLoginSitePage\n        this.showKeyboard = !!navParams.get('showKeyboard');\n\n        let url = '';\n\n        // Load fixed sites if they're set.\n        if (this.loginHelper.hasSeveralFixedSites()) {\n            this.fixedSites = <any[]> this.loginHelper.getFixedSites();\n            this.fixedDisplay = CoreConfigConstants.multisitesdisplay;\n            // Autoselect if not defined.\n            if (['list', 'listnourl', 'select', 'buttons'].indexOf(this.fixedDisplay) < 0) {\n                this.fixedDisplay = this.fixedSites.length > 8 ? 'list' : (this.fixedSites.length > 3 ? 'select' : 'buttons');\n            }\n            this.filteredSites = this.fixedSites;\n            url = this.fixedSites[0].url;\n        }\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        const modal = this.domUtils.showModalLoading();\n        this.sitesProvider.getSiteUrlList().then((data) => {\n            data.forEach(element => {\n                let oneObj: SiteURLItem =\n                 {\n                    id: element.id,\n                    arabic_name: element.arabic_name,\n                    english_name: element.english_name,\n                    url: element.url\n                }\n                this.urlList.push(oneObj);\n            });\n        }, (err) => {\n            this.domUtils.showErrorModal('core.login.errorgeturllist', true);\n        }).finally(()=>{\n            modal.dismiss();\n            this.pageLoaded = true;\n        });\n    }\n\n    /**\n     * Change site url to connect.\n     *\n     * @param {Event} e The URL to connect to.\n     */\n\n    onSiteChange(e: Event): void {\n        let urlToConnect = '';\n        this.urlList.forEach((element) => {\n            if (element.id == this.selectedSite) {\n                urlToConnect = element.url;\n            }\n        });\n\n        this.connect(urlToConnect);\n    }\n\n    // From CoreLoginSitePage\n\n    /**\n     * Try to connect to a site.\n     *\n     * @param {string} url The URL to connect to.\n     */\n    connect(url: string): void {\n        \n        this.siteChecked = false;\n\n        this.appProvider.closeKeyboard();\n\n        if (!url) {\n            this.domUtils.showErrorModal('core.login.siteurlrequired', true);\n\n            return;\n        }\n\n        if (!this.appProvider.isOnline()) {\n            this.domUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        const modal = this.domUtils.showModalLoading(),\n            siteData = this.sitesProvider.getDemoSiteData(url);\n\n        if (siteData) {\n            // It's a demo site.\n            this.sitesProvider.getUserToken(siteData.url, siteData.username, siteData.password).then((data) => {\n                return this.sitesProvider.newSite(data.siteUrl, data.token, data.privateToken).then(() => {\n                    return this.loginHelper.goToSiteInitialPage();\n                }, (error) => {\n                    this.domUtils.showErrorModal(error);\n                });\n            }, (error) => {\n                this.loginHelper.treatUserTokenError(siteData.url, error, siteData.username, siteData.password);\n            }).finally(() => {\n                modal.dismiss();\n            });\n\n        } else {\n            // Not a demo site.\n            this.sitesProvider.checkSite(url).then((result) => {\n\n                if (result.warning) {\n                    this.domUtils.showErrorModal(result.warning, true, 4000);\n                }\n\n                if (this.loginHelper.isSSOLoginNeeded(result.code)) {\n                    // SSO. User needs to authenticate in a browser.\n                    this.loginHelper.confirmAndOpenBrowserForSSOLogin(\n                        result.siteUrl, result.code, result.service, result.config && result.config.launchurl);\n                } else {\n                    // this.navCtrl.push('CoreLoginCredentialsPage', { siteUrl: result.siteUrl, siteConfig: result.config });\n                    this.siteUrl = result.siteUrl;\n                    this.siteConfig = result.config;\n                    \n                    this.treatSiteConfig();\n                    this.isFixedUrlSet = this.loginHelper.isFixedUrlSet();\n\n                    if (this.isFixedUrlSet) {\n                        // Fixed URL, we need to check if it uses browser SSO login.\n                        this.checkSite(this.siteUrl);\n                    } else {\n                        this.siteChecked = true;\n                        this.pageLoaded = true;\n                    }\n                }\n            }, (error) => {\n                this.showLoginIssue(url, error);\n            }).finally(() => {\n                modal.dismiss();\n            });\n        }\n    }\n\n    /**\n     * The filter has changed.\n     *\n     * @param {any} Received Event.\n     */\n    filterChanged(event: any): void {\n        const newValue = event.target.value && event.target.value.trim().toLowerCase();\n        if (!newValue || !this.fixedSites) {\n            this.filteredSites = this.fixedSites;\n        } else {\n            this.filteredSites = this.fixedSites.filter((site) => {\n                return site.name.toLowerCase().indexOf(newValue) > -1 || site.url.toLowerCase().indexOf(newValue) > -1;\n            });\n        }\n    }\n\n    /**\n     * Show a help modal.\n     */\n    showHelp(): void {\n        const modal = this.modalCtrl.create('CoreLoginSiteHelpPage');\n        modal.present();\n    }\n\n    /**\n     * Show an error that aims people to solve the issue.\n     *\n     * @param {string} url The URL the user was trying to connect to.\n     * @param {any} error Error to display.\n     */\n    protected showLoginIssue(url: string, error: any): void {\n        const modal = this.modalCtrl.create('CoreLoginSiteErrorPage', {\n            siteUrl: url,\n            issue: this.domUtils.getErrorMessage(error)\n        });\n\n        modal.present();\n    }\n\n    /**\n     * View left.\n     */\n    ionViewDidLeave(): void {\n        this.viewLeft = true;\n        this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_UNCHECKED, { config: this.siteConfig }, this.siteId);\n    }\n\n    /**\n     * Check if a site uses local_mobile, requires SSO login, etc.\n     * This should be used only if a fixed URL is set, otherwise this check is already performed in CoreLoginSitePage.\n     *\n     * @param {string} siteUrl Site URL to check.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected checkSite(siteUrl: string): Promise<any> {\n        // this.pageLoaded = false;\n\n        // If the site is configured with http:// protocol we force that one, otherwise we use default mode.\n        const protocol = siteUrl.indexOf('http://') === 0 ? 'http://' : undefined;\n\n        return this.sitesProvider.checkSite(siteUrl, protocol).then((result) => {\n\n            this.siteChecked = true;\n            this.siteUrl = result.siteUrl;\n\n            this.siteConfig = result.config;\n            this.treatSiteConfig();\n\n            if (result && result.warning) {\n                this.domUtils.showErrorModal(result.warning, true, 4000);\n            }\n\n            if (this.loginHelper.isSSOLoginNeeded(result.code)) {\n                // SSO. User needs to authenticate in a browser.\n                this.isBrowserSSO = true;\n\n                // Check that there's no SSO authentication ongoing and the view hasn't changed.\n                if (!this.appProvider.isSSOAuthenticationOngoing() && !this.viewLeft) {\n                    this.loginHelper.confirmAndOpenBrowserForSSOLogin(\n                        result.siteUrl, result.code, result.service, result.config && result.config.launchurl);\n                }\n            } else {\n                this.isBrowserSSO = false;\n            }\n\n        }).catch((error) => {\n            this.domUtils.showErrorModal(error);\n        }).finally(() => {\n            this.pageLoaded = true;\n        });\n    }\n\n    /**\n     * Treat the site configuration (if it exists).\n     */\n    protected treatSiteConfig(): void {\n        if (this.siteConfig) {\n            this.siteName = CoreConfigConstants.sitename ? CoreConfigConstants.sitename : this.siteConfig.sitename;\n            this.logoUrl = this.siteConfig.logourl || this.siteConfig.compactlogourl;\n            this.authInstructions = this.siteConfig.authinstructions || this.translate.instant('core.login.loginsteps');\n            this.canSignup = this.siteConfig.registerauth == 'email' && !this.loginHelper.isEmailSignupDisabled(this.siteConfig);\n            this.identityProviders = this.loginHelper.getValidIdentityProviders(this.siteConfig);\n\n            if (!this.eventThrown && !this.viewLeft) {\n                this.eventThrown = true;\n                this.eventsProvider.trigger(CoreEventsProvider.LOGIN_SITE_CHECKED, { config: this.siteConfig });\n            }\n        } else {\n            this.siteName = null;\n            this.logoUrl = null;\n            this.authInstructions = null;\n            this.canSignup = false;\n            this.identityProviders = [];\n        }\n    }\n\n    /**\n     * Tries to authenticate the user.\n     *\n     * @param {Event} [e] Event.\n     */\n    login(e?: Event): void {\n        if (e) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n\n        this.appProvider.closeKeyboard();\n\n        // Get input data.\n        const siteUrl = this.siteUrl,\n            username = this.credForm.value.username,\n            password = this.credForm.value.password;\n\n        if (!this.siteChecked || this.isBrowserSSO) {\n            // Site wasn't checked (it failed) or a previous check determined it was SSO. Let's check again.\n            this.checkSite(siteUrl).then(() => {\n                if (!this.isBrowserSSO) {\n                    // Site doesn't use browser SSO, throw app's login again.\n                    return this.login();\n                }\n            });\n\n            return;\n        }\n\n        if (!username) {\n            this.domUtils.showErrorModal('core.login.usernamerequired', true);\n\n            return;\n        }\n        if (!password) {\n            this.domUtils.showErrorModal('core.login.passwordrequired', true);\n\n            return;\n        }\n\n        if (!this.appProvider.isOnline()) {\n            this.domUtils.showErrorModal('core.networkerrormsg', true);\n\n            return;\n        }\n\n        const modal = this.domUtils.showModalLoading();\n\n        // Start the authentication process.\n        this.sitesProvider.getUserToken(siteUrl, username, password).then((data) => {\n            return this.sitesProvider.newSite(data.siteUrl, data.token, data.privateToken).then((id) => {\n                // Reset fields so the data is not in the view anymore.\n                this.credForm.controls['username'].reset();\n                this.credForm.controls['password'].reset();\n\n                this.siteId = id;\n\n                return this.loginHelper.goToSiteInitialPage(undefined, undefined, undefined, undefined, this.urlToOpen);\n            });\n        }).catch((error) => {\n            this.loginHelper.treatUserTokenError(siteUrl, error, username, password);\n        }).finally(() => {\n            modal.dismiss();\n        });\n    }\n\n    /**\n     * Forgotten password button clicked.\n     */\n    forgottenPassword(): void {\n        this.loginHelper.forgottenPasswordClicked(this.navCtrl, this.siteUrl, this.credForm.value.username, this.siteConfig);\n    }\n\n    /**\n     * An OAuth button was clicked.\n     *\n     * @param {any} provider The provider that was clicked.\n     */\n    oauthClicked(provider: any): void {\n        if (!this.loginHelper.openBrowserForOAuthLogin(this.siteUrl, provider, this.siteConfig.launchurl)) {\n            this.domUtils.showErrorModal('Invalid data.');\n        }\n    }\n\n    /**\n     * Signup button was clicked.\n     */\n    signup(): void {\n        this.navCtrl.push('CoreLoginEmailSignupPage', { siteUrl: this.siteUrl });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/login/pages/credentials/credentials.ts"],"sourceRoot":""}